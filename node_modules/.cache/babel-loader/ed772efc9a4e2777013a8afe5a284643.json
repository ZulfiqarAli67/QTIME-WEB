{"ast":null,"code":"import React from\"react\";import{createStyles,makeStyles,withStyles}from\"@material-ui/core/styles\";import MenuItem from\"@material-ui/core/MenuItem\";import FormControl from\"@material-ui/core/FormControl\";import Select from\"@material-ui/core/Select\";import OutlinedInput from\"@material-ui/core/OutlinedInput\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BootstrapInput=withStyles(function(theme){return createStyles({root:{borderRadius:0},input:{height:theme.spacing(4),paddingLeft:theme.spacing(1),paddingRight:theme.spacing(3),paddingBottom:theme.spacing(0),paddingTop:theme.spacing(0),display:\"flex\",\"justify-content\":\"center\",\"flex-direction\":\"column\",backgroundColor:\"#FFFF\",\"border-radius\":theme.spacing(0),flexWrap:\"wrap\",alignContent:\"flex-start\"//padding: theme.spacing(0),\n//   borderRadius: 4,\n//   position: 'relative',\n//   backgroundColor: theme.palette.background.paper,\n//   border: '1px solid #ced4da',\n//   fontSize: 16,\n//   padding: '10px 26px 10px 12px',\n//   transition: theme.transitions.create(['border-color', 'box-shadow']),\n//   // Use the system font instead of the default Roboto font.\n//   fontFamily: [\n//     '-apple-system',\n//     'BlinkMacSystemFont',\n//     '\"Segoe UI\"',\n//     'Roboto',\n//     '\"Helvetica Neue\"',\n//     'Arial',\n//     'sans-serif',\n//     '\"Apple Color Emoji\"',\n//     '\"Segoe UI Emoji\"',\n//     '\"Segoe UI Symbol\"',\n//   ].join(','),\n//   '&:focus': {\n//     borderRadius: 4,\n//     borderColor: '#80bdff',\n//     boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n//   },\n}});})(OutlinedInput);var useStyles=makeStyles(function(theme){return createStyles({formControl:{//  margin: theme.spacing(1),\npadding:theme.spacing(1),minWidth:120,\"-webkit-box-sizing\":\"border-box\",\"-moz-box-sizing\":\"border-box\",\"box-sizing\":\"border-box\",width:\"100%\",\"border-radius\":theme.spacing(0),borderRadius:0},selectEmpty:{marginTop:theme.spacing(2)}});});export default function SimpleSelect(props){var classes=useStyles();var elements=props.elements,selectedVal=props.selectedVal,isDisabled=props.isDisabled,onSelect=props.onSelect,_props$label=props.label,label=_props$label===void 0?\"\":_props$label,_props$styles=props.styles,styles=_props$styles===void 0?{}:_props$styles,_props$fullWidth=props.fullWidth,fullWidth=_props$fullWidth===void 0?true:_props$fullWidth,_props$displayEmpty=props.displayEmpty,displayEmpty=_props$displayEmpty===void 0?true:_props$displayEmpty,_props$defaultText=props.defaultText,defaultText=_props$defaultText===void 0?\"\":_props$defaultText;var formControlClass=styles.formControlClass,inputClass=styles.inputClass;// const [selectedVal, setVal] = useState(\"\");\nvar handleChange=function handleChange(event){console.log(event.target.value);// setVal(event.target.value as string);\nonSelect(event.target.value);};return/*#__PURE__*/_jsx(FormControl,{size:\"small\",className:formControlClass||classes.formControl,fullWidth:fullWidth,children:/*#__PURE__*/_jsxs(Select,{labelId:\"simple-select-outlined-label\",disabled:isDisabled||false,id:\"simple-select-outlined\",value:selectedVal,onChange:handleChange,className:inputClass,input:/*#__PURE__*/_jsx(BootstrapInput,{}),label:label,fullWidth:fullWidth,displayEmpty:displayEmpty,MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null},children:[/*#__PURE__*/_jsx(MenuItem,{disabled:true,value:\"\",children:defaultText||/*#__PURE__*/_jsx(\"em\",{children:\"None\"})}),elements&&elements.map(function(element){return/*#__PURE__*/_jsx(MenuItem,{value:element.key,children:element.value});})]})});}","map":{"version":3,"sources":["E:/QTIME-WEB-FE/src/components/common/dropdown.tsx"],"names":["React","createStyles","makeStyles","withStyles","MenuItem","FormControl","Select","OutlinedInput","BootstrapInput","theme","root","borderRadius","input","height","spacing","paddingLeft","paddingRight","paddingBottom","paddingTop","display","backgroundColor","flexWrap","alignContent","useStyles","formControl","padding","minWidth","width","selectEmpty","marginTop","SimpleSelect","props","classes","elements","selectedVal","isDisabled","onSelect","label","styles","fullWidth","displayEmpty","defaultText","formControlClass","inputClass","handleChange","event","console","log","target","value","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","map","element","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      borderRadius: 0\r\n    },\r\n    input: {\r\n      height: theme.spacing(4),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(3),\r\n      paddingBottom: theme.spacing(0),\r\n      paddingTop: theme.spacing(0),\r\n      display: \"flex\",\r\n      \"justify-content\": \"center\",\r\n      \"flex-direction\": \"column\",\r\n      backgroundColor: \"#FFFF\",\r\n      \"border-radius\": theme.spacing(0),\r\n      flexWrap: \"wrap\",\r\n      alignContent: \"flex-start\",\r\n      //padding: theme.spacing(0),\r\n      //   borderRadius: 4,\r\n      //   position: 'relative',\r\n      //   backgroundColor: theme.palette.background.paper,\r\n      //   border: '1px solid #ced4da',\r\n      //   fontSize: 16,\r\n      //   padding: '10px 26px 10px 12px',\r\n      //   transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      //   // Use the system font instead of the default Roboto font.\r\n      //   fontFamily: [\r\n      //     '-apple-system',\r\n      //     'BlinkMacSystemFont',\r\n      //     '\"Segoe UI\"',\r\n      //     'Roboto',\r\n      //     '\"Helvetica Neue\"',\r\n      //     'Arial',\r\n      //     'sans-serif',\r\n      //     '\"Apple Color Emoji\"',\r\n      //     '\"Segoe UI Emoji\"',\r\n      //     '\"Segoe UI Symbol\"',\r\n      //   ].join(','),\r\n      //   '&:focus': {\r\n      //     borderRadius: 4,\r\n      //     borderColor: '#80bdff',\r\n      //     boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      //   },\r\n    },\r\n  })\r\n)(OutlinedInput);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      //  margin: theme.spacing(1),\r\n      padding: theme.spacing(1),\r\n      minWidth: 120,\r\n      \"-webkit-box-sizing\": \"border-box\",\r\n      \"-moz-box-sizing\": \"border-box\",\r\n      \"box-sizing\": \"border-box\",\r\n      width: \"100%\",\r\n      \"border-radius\": theme.spacing(0),\r\n      borderRadius: 0,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface SelectProps {\r\n  elements: { key: string; value: string }[],\r\n  selectedVal: string,\r\n  isDisabled? : boolean,\r\n  onSelect: (selected : any) => any;\r\n  styles? : any,\r\n  label? : string,\r\n  fullWidth? : boolean,\r\n  displayEmpty? : boolean,\r\n  defaultText? : string\r\n}\r\n\r\nexport default function SimpleSelect(props: SelectProps) {\r\n  const classes = useStyles();\r\n  const {\r\n    elements,\r\n    selectedVal,\r\n    isDisabled,\r\n    onSelect,\r\n    label = \"\",\r\n    styles = {},\r\n    fullWidth = true,\r\n    displayEmpty = true,\r\n    defaultText = \"\",\r\n  } = props; \r\n  const { formControlClass, inputClass } = styles; \r\n  // const [selectedVal, setVal] = useState(\"\");\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    console.log(event.target.value)\r\n    // setVal(event.target.value as string);\r\n    onSelect(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl size=\"small\" className={formControlClass || classes.formControl} fullWidth={fullWidth}>\r\n      <Select\r\n        labelId=\"simple-select-outlined-label\"\r\n        disabled={isDisabled || false}\r\n        id=\"simple-select-outlined\"\r\n        value={selectedVal}\r\n        onChange={handleChange}\r\n        className={inputClass}\r\n        input={<BootstrapInput />}\r\n        label={label}\r\n        fullWidth={fullWidth}\r\n        displayEmpty={displayEmpty}\r\n        MenuProps={{\r\n          anchorOrigin: {\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\"\r\n          },\r\n          transformOrigin: {\r\n            vertical: \"top\",\r\n            horizontal: \"left\"\r\n          },\r\n          getContentAnchorEl: null\r\n        }}\r\n      >\r\n        <MenuItem disabled value={\"\"}>\r\n            {defaultText || <em>None</em>}\r\n          </MenuItem>\r\n        {elements &&\r\n          elements.map((element) => {\r\n            return (\r\n              <MenuItem value={element.key}>\r\n                {element.value}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}