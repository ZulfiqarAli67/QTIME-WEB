{"ast":null,"code":"import _regeneratorRuntime from\"E:/QTIME-WEB-FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/QTIME-WEB-FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"E:/QTIME-WEB-FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"E:/QTIME-WEB-FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"E:/QTIME-WEB-FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"E:/QTIME-WEB-FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Dialog,DialogTitle,DialogActions}from\"@material-ui/core\";import React,{Component}from\"react\";import{Button}from\"react-bootstrap\";import\"./ChangePasswordDialog.css\";import NativeSelectDropDown from\"../common/nativeDropdown\";import swal from\"sweetalert\";import*as constantClass from\"../Constants/Constants\";import{withHooksHOC}from\"../ApprovalTimeSheet/ApprovalTimeSheetHooks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChangePasswordDialog=/*#__PURE__*/function(_Component){_inherits(ChangePasswordDialog,_Component);var _super=_createSuper(ChangePasswordDialog);function ChangePasswordDialog(props){var _this;_classCallCheck(this,ChangePasswordDialog);_this=_super.call(this,props);_this.setInitialValue=function(){var disable=true;var userLvl=localStorage.getItem(constantClass.USERLEVEL)||\"0\";if(userLvl){if(parseInt(userLvl)==1){disable=false;}}_this.setState({selectedEmployee:_this.props.selectedEmployee,isCurrentPasswordDisable:disable});};_this.retrieveEmployee=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,response,filteredEmployee;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.props.useFetch.getEmployeeList(\"Id,SurName,OthrNames,Int_key\");case 2:result=_context.sent;if(result.code===200){response=result.data;filteredEmployee=response.map(function(element){return{key:element.Id,value:\"\".concat(element.Id,\" - \").concat(element.SurName,\" \").concat(element.OthrNames)};});_this.setState({employeeList:filteredEmployee,actualEmpList:response});}else{swal(\"QTIME\",result.data.ExceptionMessage,\"error\");}case 4:case\"end\":return _context.stop();}}},_callee);}));_this.onCurrentPasswordChange=function(event){_this.setState({currentPassword:event.target.value});};_this.onNewPasswordChange=function(event){_this.setState({newPassword:event.target.value});};_this.onNewConfirmationPasswordChange=function(event){_this.setState({confirmNewPassword:event.target.value});};_this.handleClickOk=function(){var selectedUserId=_this.state.selectedEmployee;if(selectedUserId.includes(\"-\")){selectedUserId=selectedUserId.split(\"-\")[0];}var empList=_this.state.actualEmpList;if(selectedUserId.length>0){var selectedUserIndex=empList.findIndex(function(emp){return emp.Id==selectedUserId;});if(selectedUserIndex>-1){_this.changePassword(empList[selectedUserIndex].Int_key);}}};_this.setEmployee=function(evt){var value=evt.target.value;_this.setState({selectedEmployee:value});};_this.changePassword=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userIntKey){var newPassword,currentPassword,confirmNewPassword,userLvl,result,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:debugger;newPassword=_this.state.newPassword;currentPassword=_this.state.currentPassword;confirmNewPassword=_this.state.confirmNewPassword;userLvl=localStorage.getItem(constantClass.USERLEVEL)||\"0\";// if (userLvl) {\n//   if (parseInt(userLvl) == 1) {\nif(!(newPassword.length>0)){swal(\"Change password\",\"Please enter new password\",\"warning\");}if(!(currentPassword.length>0)&&parseInt(userLvl)==1){swal(\"Change password\",\"Please enter current password\",\"warning\");}if(!(confirmNewPassword.length>0)){swal(\"Change password\",\"Please enter confirmation new password\",\"warning\");}if(!(newPassword.length>0&&(currentPassword.length>0||parseInt(userLvl)!=1)&&confirmNewPassword.length>0)){_context2.next=13;break;}_context2.next=11;return _this.props.useFetch.changePassword(_this.state.newPassword,_this.state.confirmNewPassword,_this.state.currentPassword,userIntKey);case 11:result=_context2.sent;if(result.code===200){response=result.data;if(response){if(response.includes(\"ERROR -\")){swal(\"Change password\",response.split(\"ERROR -\")[1],\"error\");}else if(response.includes(\"SUCCESS\")){swal(\"Change password\",\"Successfully changed\",\"info\");}}}else{swal(\"QTIME\",result.data.ExceptionMessage,\"error\");}case 13:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}();_this.state={currentPassword:\"\",newPassword:\"\",confirmNewPassword:\"\",selectedEmployeeIntKey:\"\",employeeList:[],selectedEmployee:\"\",actualEmpList:[],isCurrentPasswordDisable:false};return _this;}_createClass(ChangePasswordDialog,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.retrieveEmployee();case 2:this.setInitialValue();case 3:case\"end\":return _context3.stop();}}},_callee3,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:// private changePassword = async (userIntKey: string) => {\n//   const newPassword: string = this.state.newPassword;\n//   const currentPassword: string = this.state.currentPassword;\n//   const confirmNewPassword: string = this.state.confirmNewPassword;\n//   if (!(newPassword.length > 0)) {\n//     swal(\"Change password\", \"Please enter new password\", \"warning\");\n//   }\n//   if (!(currentPassword.length > 0)) {\n//     swal(\"Change password\", \"Please enter current password\", \"warning\");\n//   }\n//   if (!(confirmNewPassword.length > 0)) {\n//     swal(\n//       \"Change password\",\n//       \"Please enter confirmation new password\",\n//       \"warning\"\n//     );\n//   }\n//   if (\n//     newPassword.length > 0 &&\n//     currentPassword.length > 0 &&\n//     confirmNewPassword.length > 0\n//   ) {\n//     const response = await Api.changePassword(\n//       this.state.newPassword,\n//       this.state.currentPassword,\n//       this.state.confirmNewPassword,\n//       userIntKey\n//     );\n//     if (response) {\n//       if (response.includes(\"ERROR -\")) {\n//         swal(\"Change password\", response.split(\"ERROR -\")[1], \"error\");\n//       } else if (response.includes(\"SUCCESS\")) {\n//         swal(\"Change password\", \"Successfully changed\", \"info\");\n//       }\n//     }\n//   }\n// };\nfunction render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Dialog,{disableBackdropClick:true,disableEscapeKeyDown:true,fullWidth:true// maxWidth=\"sm\"\n,\"aria-labelledby\":\"form-dialog-title\",open:this.props.open,onClose:this.props.onClose,children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"form-dialog-title\",className:\"headerTitle\",children:\"Change password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group row\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"staticEmail\",className:\"col-sm-4 col-form-label lbl\",children:\"Employee:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-7 cpEmployee\",children:/*#__PURE__*/_jsx(NativeSelectDropDown,{elements:this.state.employeeList,onChangeEvt:this.setEmployee,selectedVal:this.state.selectedEmployee})}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"currentPassword\",className:\"col-sm-4 col-form-label lbl\",children:\"Enter current password:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-7 \",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control cpContainer\",id:\"currentPassword\",onChange:this.onCurrentPasswordChange,disabled:this.state.isCurrentPasswordDisable})}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newPassword\",className:\"col-sm-4 col-form-label lbl\",children:\"Enter new password:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-7 \",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control cpContainer\",id:\"newPassword\",onChange:this.onNewPasswordChange})}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmNewPassword\",className:\"col-sm-4 col-form-label lbl\",children:\"Confirm new password:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-7 \",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control cpContainer\",id:\"confirmNewPassword\",onChange:this.onNewConfirmationPasswordChange})})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:this.handleClickOk,color:\"primary\",children:\"OK\"}),/*#__PURE__*/_jsx(Button,{onClick:this.props.onClose,color:\"secondary\",children:\"Cancel\"})]})]})});}}]);return ChangePasswordDialog;}(Component);export default withHooksHOC(ChangePasswordDialog);","map":{"version":3,"sources":["E:/QTIME-WEB-FE/src/components/ChangePassword/ChangePasswordDialog.tsx"],"names":["Dialog","DialogTitle","DialogActions","React","Component","Button","NativeSelectDropDown","swal","constantClass","withHooksHOC","ChangePasswordDialog","props","setInitialValue","disable","userLvl","localStorage","getItem","USERLEVEL","parseInt","setState","selectedEmployee","isCurrentPasswordDisable","retrieveEmployee","useFetch","getEmployeeList","result","code","response","data","filteredEmployee","map","element","key","Id","value","SurName","OthrNames","employeeList","actualEmpList","ExceptionMessage","onCurrentPasswordChange","event","currentPassword","target","onNewPasswordChange","newPassword","onNewConfirmationPasswordChange","confirmNewPassword","handleClickOk","selectedUserId","state","includes","split","empList","length","selectedUserIndex","findIndex","emp","changePassword","Int_key","setEmployee","evt","userIntKey","selectedEmployeeIntKey","open","onClose"],"mappings":"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","sourcesContent":["import { Dialog, DialogTitle, DialogActions } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport SimpleSelect from \"../common/dropdown\";\r\nimport \"./ChangePasswordDialog.css\";\r\nimport { Api, ResponseDTO } from \"../../utils/api/api\";\r\nimport NativeSelectDropDown from \"../common/nativeDropdown\";\r\nimport swal from \"sweetalert\";\r\nimport * as constantClass from \"../Constants/Constants\";\r\nimport { withHooksHOC } from \"../ApprovalTimeSheet/ApprovalTimeSheetHooks\";\r\n\r\ninterface IChangePasswordDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  selectedEmployee: string;\r\n  useFetch: any;\r\n  // onOkPressed: () => void;\r\n}\r\ninterface IChangePasswordDialogState {\r\n  currentPassword: string;\r\n  newPassword: string;\r\n  confirmNewPassword: string;\r\n  selectedEmployeeIntKey: string;\r\n  employeeList: any[];\r\n  selectedEmployee: string;\r\n  actualEmpList: any[];\r\n  isCurrentPasswordDisable: boolean;\r\n}\r\nclass ChangePasswordDialog extends Component<\r\n  IChangePasswordDialogProps,\r\n  IChangePasswordDialogState\r\n> {\r\n  constructor(props: IChangePasswordDialogProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentPassword: \"\",\r\n      newPassword: \"\",\r\n      confirmNewPassword: \"\",\r\n      selectedEmployeeIntKey: \"\",\r\n      employeeList: [],\r\n      selectedEmployee: \"\",\r\n      actualEmpList: [],\r\n      isCurrentPasswordDisable: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.retrieveEmployee();\r\n    this.setInitialValue();\r\n  }\r\n  private setInitialValue = () => {\r\n    let disable = true;\r\n    const userLvl: string =\r\n      localStorage.getItem(constantClass.USERLEVEL) || \"0\";\r\n    if (userLvl) {\r\n      if (parseInt(userLvl) == 1) {\r\n        disable = false;\r\n      }\r\n    }\r\n    this.setState({\r\n      selectedEmployee: this.props.selectedEmployee,\r\n      isCurrentPasswordDisable: disable,\r\n    });\r\n  };\r\n  private retrieveEmployee = async () => {\r\n    //const {getEmployeeList} = useFetch();\r\n    const result: ResponseDTO = await this.props.useFetch.getEmployeeList(\r\n      \"Id,SurName,OthrNames,Int_key\"\r\n    );\r\n\r\n      if (result.code === 200) {\r\n          const response = result.data;\r\n          const filteredEmployee = response.map((element: any) => {\r\n              return {\r\n                  key: element.Id,\r\n                  value: `${element.Id} - ${element.SurName} ${element.OthrNames}`,\r\n              };\r\n          });\r\n          this.setState({\r\n              employeeList: filteredEmployee,\r\n              actualEmpList: response,\r\n          });\r\n      }\r\n      else {\r\n          swal(\"QTIME\", result.data.ExceptionMessage, \"error\");\r\n      }\r\n\r\n  };\r\n  // private retrieveEmployee = async () => {\r\n  //   const response = await Api.getEmployeeList(\"Id,SurName,OthrNames,Int_key\");\r\n  //   if (response) {\r\n  //     const filteredEmployee = response.map((element: any) => {\r\n  //       return {\r\n  //         key: element.Id,\r\n  //         value: element.SurName + \" \" + element.OthrNames,\r\n  //       };\r\n  //     });\r\n  //     this.setState({\r\n  //       employeeList: filteredEmployee,\r\n  //       actualEmpList: response,\r\n  //     });\r\n  //   }\r\n  // };\r\n  private onCurrentPasswordChange = (event: any) => {\r\n    this.setState({\r\n      currentPassword: event.target.value,\r\n    });\r\n  };\r\n  private onNewPasswordChange = (event: any) => {\r\n    this.setState({\r\n      newPassword: event.target.value,\r\n    });\r\n  };\r\n  private onNewConfirmationPasswordChange = (event: any) => {\r\n    this.setState({\r\n      confirmNewPassword: event.target.value,\r\n    });\r\n  };\r\n\r\n  private handleClickOk = () => {\r\n    let selectedUserId = this.state.selectedEmployee;\r\n    if (selectedUserId.includes(\"-\")) {\r\n      selectedUserId = selectedUserId.split(\"-\")[0];\r\n    }\r\n    const empList = this.state.actualEmpList;\r\n    if (selectedUserId.length > 0) {\r\n      const selectedUserIndex = empList.findIndex((emp: any) => {\r\n        return emp.Id == selectedUserId;\r\n      });\r\n      if (selectedUserIndex > -1) {\r\n        this.changePassword(empList[selectedUserIndex].Int_key);\r\n      }\r\n    }\r\n  };\r\n  private setEmployee = (evt: any) => {\r\n    const value = evt.target.value;\r\n    this.setState({\r\n      selectedEmployee: value,\r\n    });\r\n  };\r\n    private changePassword = async (userIntKey: string) => {\r\n        debugger\r\n        const newPassword: string = this.state.newPassword;\r\n        const currentPassword: string = this.state.currentPassword;\r\n        const confirmNewPassword: string = this.state.confirmNewPassword;\r\n\r\n        const userLvl: string =\r\n            localStorage.getItem(constantClass.USERLEVEL) || \"0\";\r\n        // if (userLvl) {\r\n        //   if (parseInt(userLvl) == 1) {\r\n        if (!(newPassword.length > 0)) {\r\n            swal(\"Change password\", \"Please enter new password\", \"warning\");\r\n        }\r\n        if (!(currentPassword.length > 0) && parseInt(userLvl) == 1) {\r\n            swal(\"Change password\", \"Please enter current password\", \"warning\");\r\n        }\r\n        if (!(confirmNewPassword.length > 0)) {\r\n            swal(\r\n                \"Change password\",\r\n                \"Please enter confirmation new password\",\r\n                \"warning\"\r\n            );\r\n        }\r\n\r\n        if (\r\n            newPassword.length > 0 &&\r\n            (currentPassword.length > 0 || parseInt(userLvl) != 1) &&\r\n            confirmNewPassword.length > 0\r\n        ) {\r\n            //const { changePassword } = useFetch();\r\n            const result: ResponseDTO = await this.props.useFetch.changePassword(\r\n                this.state.newPassword,\r\n                this.state.confirmNewPassword,\r\n                this.state.currentPassword,\r\n                userIntKey\r\n            );\r\n\r\n            if (result.code === 200) {\r\n                const response = result.data;\r\n                if (response) {\r\n                    if (response.includes(\"ERROR -\")) {\r\n                        swal(\"Change password\", response.split(\"ERROR -\")[1], \"error\");\r\n                    } else if (response.includes(\"SUCCESS\")) {\r\n                        swal(\"Change password\", \"Successfully changed\", \"info\");\r\n                    }\r\n                }\r\n            } else {\r\n                swal(\"QTIME\", result.data.ExceptionMessage, \"error\");\r\n            }\r\n        }\r\n    };\r\n   \r\n  // private changePassword = async (userIntKey: string) => {\r\n  //   const newPassword: string = this.state.newPassword;\r\n  //   const currentPassword: string = this.state.currentPassword;\r\n  //   const confirmNewPassword: string = this.state.confirmNewPassword;\r\n  //   if (!(newPassword.length > 0)) {\r\n  //     swal(\"Change password\", \"Please enter new password\", \"warning\");\r\n  //   }\r\n  //   if (!(currentPassword.length > 0)) {\r\n  //     swal(\"Change password\", \"Please enter current password\", \"warning\");\r\n  //   }\r\n  //   if (!(confirmNewPassword.length > 0)) {\r\n  //     swal(\r\n  //       \"Change password\",\r\n  //       \"Please enter confirmation new password\",\r\n  //       \"warning\"\r\n  //     );\r\n  //   }\r\n\r\n  //   if (\r\n  //     newPassword.length > 0 &&\r\n  //     currentPassword.length > 0 &&\r\n  //     confirmNewPassword.length > 0\r\n  //   ) {\r\n  //     const response = await Api.changePassword(\r\n  //       this.state.newPassword,\r\n  //       this.state.currentPassword,\r\n  //       this.state.confirmNewPassword,\r\n  //       userIntKey\r\n  //     );\r\n  //     if (response) {\r\n  //       if (response.includes(\"ERROR -\")) {\r\n  //         swal(\"Change password\", response.split(\"ERROR -\")[1], \"error\");\r\n  //       } else if (response.includes(\"SUCCESS\")) {\r\n  //         swal(\"Change password\", \"Successfully changed\", \"info\");\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          fullWidth={true}\r\n          // maxWidth=\"sm\"\r\n          aria-labelledby=\"form-dialog-title\"\r\n          open={this.props.open}\r\n          onClose={this.props.onClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\" className=\"headerTitle\">\r\n            Change password\r\n          </DialogTitle>\r\n\r\n          {/* <DialogContent> */}\r\n          <div className=\"form-group row\">\r\n            <label\r\n              htmlFor=\"staticEmail\"\r\n              className=\"col-sm-4 col-form-label lbl\"\r\n            >\r\n              Employee:\r\n            </label>\r\n            <div className=\"col-sm-7 cpEmployee\">\r\n              <NativeSelectDropDown\r\n                elements={this.state.employeeList}\r\n                onChangeEvt={this.setEmployee}\r\n                selectedVal={this.state.selectedEmployee}\r\n              ></NativeSelectDropDown>\r\n            </div>\r\n            <label\r\n              htmlFor=\"currentPassword\"\r\n              className=\"col-sm-4 col-form-label lbl\"\r\n            >\r\n              Enter current password:\r\n            </label>\r\n            <div className=\"col-sm-7 \">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control cpContainer\"\r\n                id=\"currentPassword\"\r\n                onChange={this.onCurrentPasswordChange}\r\n                disabled={this.state.isCurrentPasswordDisable}\r\n              />\r\n            </div>\r\n            <label\r\n              htmlFor=\"newPassword\"\r\n              className=\"col-sm-4 col-form-label lbl\"\r\n            >\r\n              Enter new password:\r\n            </label>\r\n            <div className=\"col-sm-7 \">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control cpContainer\"\r\n                id=\"newPassword\"\r\n                onChange={this.onNewPasswordChange}\r\n              />\r\n            </div>\r\n            <label\r\n              htmlFor=\"confirmNewPassword\"\r\n              className=\"col-sm-4 col-form-label lbl\"\r\n            >\r\n              Confirm new password:\r\n            </label>\r\n            <div className=\"col-sm-7 \">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control cpContainer\"\r\n                id=\"confirmNewPassword\"\r\n                onChange={this.onNewConfirmationPasswordChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <DialogActions>\r\n            <Button onClick={this.handleClickOk} color=\"primary\">\r\n              OK\r\n            </Button>\r\n            <Button onClick={this.props.onClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withHooksHOC(ChangePasswordDialog);\r\n"]},"metadata":{},"sourceType":"module"}