{"ast":null,"code":"import _slicedToArray from\"E:/QTIME-WEB-FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./nativeDropdown.css\";import{createStyles,makeStyles,withStyles}from\"@material-ui/core/styles\";import FormControl from\"@material-ui/core/FormControl\";import OutlinedInput from\"@material-ui/core/OutlinedInput\";import NativeSelect from\"@material-ui/core/NativeSelect\";import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var BootstrapInput=withStyles(function(theme){return createStyles({root:{\"& .MuiOutlinedInput-root\":{\"border-radius\":theme.spacing(0)}},input:{height:theme.spacing(4),paddingLeft:theme.spacing(1),paddingRight:theme.spacing(3),paddingBottom:theme.spacing(0),paddingTop:theme.spacing(0),display:\"flex\",\"justify-content\":\"center\",\"flex-direction\":\"column\",backgroundColor:\"#FFFF\",\"border-radius\":theme.spacing(0),flexWrap:\"wrap\",alignContent:\"flex-start\"},WithStyles:{paddingTop:\"5px\",height:\"26px\"}});})(OutlinedInput);var useStyles=makeStyles(function(theme){return createStyles({formControl:{//  margin: theme.spacing(1),\npadding:theme.spacing(1),minWidth:120,\"-webkit-box-sizing\":\"border-box\",\"-moz-box-sizing\":\"border-box\",\"box-sizing\":\"border-box\",width:\"100%\",\"border-radius\":theme.spacing(0),borderRadius:0},selectEmpty:{marginTop:theme.spacing(2)}});});export default function NativeSelectDropDown(props){var classes=useStyles();var _useState=useState(props.selectedVal),_useState2=_slicedToArray(_useState,2),selectedVal=_useState2[0],setVal=_useState2[1];useEffect(function(){setInitialData();},[props]);var setInitialData=function setInitialData(){if(props.selectedVal&&props.selectedVal.length>0){setVal(props.selectedVal);}};var handleChange=function handleChange(event){setVal(event.target.value);if(props.onChangeEvt){return props.onChangeEvt(event);}};return/*#__PURE__*/_jsx(FormControl,{size:\"small\",className:classes.formControl,children:/*#__PURE__*/_jsx(NativeSelect,{id:\"demo-simple-select-outlined\",value:selectedVal,onChange:handleChange,className:\"qTimeDropdown\",input:/*#__PURE__*/_jsx(BootstrapInput,{}),inputProps:{\"aria-label\":\"age\"},children:props.elements&&props.elements.map(function(element){return/*#__PURE__*/_jsx(\"option\",{value:element.key+\"-\"+element.value,children:element.value},element.key);})})});}","map":{"version":3,"sources":["E:/QTIME-WEB-FE/src/components/common/nativeDropdown.tsx"],"names":["React","useState","createStyles","makeStyles","withStyles","FormControl","OutlinedInput","NativeSelect","useEffect","BootstrapInput","theme","root","spacing","input","height","paddingLeft","paddingRight","paddingBottom","paddingTop","display","backgroundColor","flexWrap","alignContent","WithStyles","useStyles","formControl","padding","minWidth","width","borderRadius","selectEmpty","marginTop","NativeSelectDropDown","props","classes","selectedVal","setVal","setInitialData","length","handleChange","event","target","value","onChangeEvt","elements","map","element","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./nativeDropdown.css\";\r\n\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root\": {\r\n        \"border-radius\": theme.spacing(0),\r\n      },\r\n    },\r\n    input: {\r\n      height: theme.spacing(4),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(3),\r\n      paddingBottom: theme.spacing(0),\r\n      paddingTop: theme.spacing(0),\r\n      display: \"flex\",\r\n      \"justify-content\": \"center\",\r\n      \"flex-direction\": \"column\",\r\n      backgroundColor: \"#FFFF\",\r\n      \"border-radius\": theme.spacing(0),\r\n      flexWrap: \"wrap\",\r\n      alignContent: \"flex-start\",\r\n    },\r\n    WithStyles: {\r\n      paddingTop: \"5px\",\r\n      height: \"26px\",\r\n    },\r\n  })\r\n)(OutlinedInput);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      //  margin: theme.spacing(1),\r\n      padding: theme.spacing(1),\r\n      minWidth: 120,\r\n      \"-webkit-box-sizing\": \"border-box\",\r\n      \"-moz-box-sizing\": \"border-box\",\r\n      \"box-sizing\": \"border-box\",\r\n      width: \"100%\",\r\n      \"border-radius\": theme.spacing(0),\r\n      borderRadius: 0,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface SelectProps {\r\n  elements: { key: string; value: string }[];\r\n  selectedVal?: string;\r\n  onChangeEvt?: any;\r\n}\r\n\r\nexport default function NativeSelectDropDown(props: SelectProps) {\r\n  const classes = useStyles();\r\n  const [selectedVal, setVal] = useState(props.selectedVal);\r\n  useEffect(() => {\r\n    setInitialData();\r\n  }, [props]);\r\n\r\n  const setInitialData = () => {\r\n    if (props.selectedVal && props.selectedVal.length > 0) {\r\n      setVal(props.selectedVal);\r\n    }\r\n  };\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setVal(event.target.value as string);\r\n    if (props.onChangeEvt) {\r\n      return props.onChangeEvt(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl size=\"small\" className={classes.formControl}>\r\n      {/* <InputLabel id=\"demo-simple-select-outlined-label\">Age</InputLabel> */}\r\n      <NativeSelect\r\n        id=\"demo-simple-select-outlined\"\r\n        value={selectedVal}\r\n        onChange={handleChange}\r\n        className=\"qTimeDropdown\"\r\n        input={<BootstrapInput />}\r\n        inputProps={{ \"aria-label\": \"age\" }}\r\n      >\r\n        {/* <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem> */}\r\n        {props.elements &&\r\n          props.elements.map((element) => {\r\n            return (\r\n              <option\r\n                key={element.key}\r\n                value={element.key + \"-\" + element.value}\r\n              >\r\n                {element.value}\r\n              </option>\r\n            );\r\n          })}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}