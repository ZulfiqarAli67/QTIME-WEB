{"ast":null,"code":"import*as React from\"react\";import{DataGrid,DEFAULT_GRID_OPTIONS}from\"@material-ui/data-grid\";import\"./DataTable.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var rowHeight=DEFAULT_GRID_OPTIONS.rowHeight,headerHeight=DEFAULT_GRID_OPTIONS.headerHeight;export default function DataTable(props){return/*#__PURE__*/_jsx(\"div\",{className:\"dataTable\",style:{height:headerHeight+rowHeight*4,marginLeft:10,marginRight:10},children:/*#__PURE__*/_jsx(DataGrid,{apiRef:props.apiRef,rows:props.rowData,columns:props.columns,checkboxSelection:props.checkboxSelection,hideFooter:true,density:\"compact\",editRowsModel:props.editRowModel,disableColumnReorder:true,onEditCellChangeCommitted:props.editCellChangeCommitedFn,onRowSelected:props.rowSelectFn,onSelectionModelChange:props.selectionModelChangeFn,loading:props.isDataTableLoading,isRowSelectable:function isRowSelectable(params){if(props.isRowSelectionfn){return props.isRowSelectionfn(params);}return true;},isCellEditable:function isCellEditable(params){if(props.isDataTableEditablefn){return props.isDataTableEditablefn(params);}return props.isDataTableEditable==true;}})});}","map":{"version":3,"sources":["E:/QTIME-WEB-FE/src/components/common/DataTable.tsx"],"names":["React","DataGrid","DEFAULT_GRID_OPTIONS","rowHeight","headerHeight","DataTable","props","height","marginLeft","marginRight","apiRef","rowData","columns","checkboxSelection","editRowModel","editCellChangeCommitedFn","rowSelectFn","selectionModelChangeFn","isDataTableLoading","params","isRowSelectionfn","isDataTableEditablefn","isDataTableEditable"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACEC,QADF,CAEEC,oBAFF,KAOO,wBAPP,CAQA,MAAO,iBAAP,C,8CAEQC,CAAAA,S,CAA4BD,oB,CAA5BC,S,CAAWC,Y,CAAiBF,oB,CAAjBE,Y,CAEnB,cAAe,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAaZ,CACD,mBACE,YACE,SAAS,CAAC,WADZ,CAEE,KAAK,CAAE,CACLC,MAAM,CAAEH,YAAY,CAAGD,SAAS,CAAG,CAD9B,CAELK,UAAU,CAAE,EAFP,CAGLC,WAAW,CAAE,EAHR,CAFT,uBAQE,KAAC,QAAD,EACE,MAAM,CAAEH,KAAK,CAACI,MADhB,CAEE,IAAI,CAAEJ,KAAK,CAACK,OAFd,CAGE,OAAO,CAAEL,KAAK,CAACM,OAHjB,CAIE,iBAAiB,CAAEN,KAAK,CAACO,iBAJ3B,CAKE,UAAU,CAAE,IALd,CAME,OAAO,CAAE,SANX,CAOE,aAAa,CAAEP,KAAK,CAACQ,YAPvB,CAQE,oBAAoB,CAAE,IARxB,CASE,yBAAyB,CAAER,KAAK,CAACS,wBATnC,CAUE,aAAa,CAAET,KAAK,CAACU,WAVvB,CAWE,sBAAsB,CAAEV,KAAK,CAACW,sBAXhC,CAYE,OAAO,CAAEX,KAAK,CAACY,kBAZjB,CAaE,eAAe,CAAE,yBAACC,MAAD,CAAY,CAC3B,GAAIb,KAAK,CAACc,gBAAV,CAA4B,CAC1B,MAAOd,CAAAA,KAAK,CAACc,gBAAN,CAAuBD,MAAvB,CAAP,CACD,CACD,MAAO,KAAP,CACD,CAlBH,CAmBE,cAAc,CAAE,wBAACA,MAAD,CAAY,CAC1B,GAAIb,KAAK,CAACe,qBAAV,CAAiC,CAC/B,MAAOf,CAAAA,KAAK,CAACe,qBAAN,CAA4BF,MAA5B,CAAP,CACD,CACD,MAAOb,CAAAA,KAAK,CAACgB,mBAAN,EAA6B,IAApC,CACD,CAxBH,EARF,EADF,CAqCD","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  DataGrid,\r\n  DEFAULT_GRID_OPTIONS,\r\n  GridColDef,\r\n  GridEditCellPropsParams,\r\n  GridRowSelectedParams,\r\n  GridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\nimport \"./DataTable.css\";\r\n\r\nconst { rowHeight, headerHeight } = DEFAULT_GRID_OPTIONS;\r\n\r\nexport default function DataTable(props: {\r\n  columns: GridColDef[];\r\n  rowData: any;\r\n  checkboxSelection: boolean;\r\n  editCellChangeCommitedFn: any;\r\n  editRowModel: any;\r\n  rowSelectFn: any;\r\n  apiRef: any;\r\n  selectionModelChangeFn: any;\r\n  isDataTableLoading: boolean;\r\n  isDataTableEditable: boolean;\r\n  isDataTableEditablefn: any;\r\n  isRowSelectionfn?: any;\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"dataTable\"\r\n      style={{\r\n        height: headerHeight + rowHeight * 4,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n      }}\r\n    >\r\n      <DataGrid\r\n        apiRef={props.apiRef}\r\n        rows={props.rowData}\r\n        columns={props.columns}\r\n        checkboxSelection={props.checkboxSelection}\r\n        hideFooter={true}\r\n        density={\"compact\"}\r\n        editRowsModel={props.editRowModel}\r\n        disableColumnReorder={true}\r\n        onEditCellChangeCommitted={props.editCellChangeCommitedFn}\r\n        onRowSelected={props.rowSelectFn}\r\n        onSelectionModelChange={props.selectionModelChangeFn}\r\n        loading={props.isDataTableLoading}\r\n        isRowSelectable={(params) => {\r\n          if (props.isRowSelectionfn) {\r\n            return props.isRowSelectionfn(params);\r\n          }\r\n          return true;\r\n        }}\r\n        isCellEditable={(params) => {\r\n          if (props.isDataTableEditablefn) {\r\n            return props.isDataTableEditablefn(params);\r\n          }\r\n          return props.isDataTableEditable == true;\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}